shortest-path(G, start)
    set every vertices of G as unexplored
    newHeap entry A[start] = 0
    while v, A[v] := deHeap
        set v as explored
        shortest path from start to v is A[v]
        for w := range E[v]
            if w is unexplored
                addHeap A[w] = min(A[w], A[v]+l(v,w))


addHeap(v, score)
    - heap = append(heap, {v, score})
    i := n - 1
    while i && heap[i] < heap[(i-1)/2]
        swap heap[i], heap[(i-1)/2]
        i = (i-1)/2
    return i
